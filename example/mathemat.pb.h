// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mathemat.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mathemat_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mathemat_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mathemat_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mathemat_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mathemat_2eproto;
namespace math {
class AddNum;
class AddNumDefaultTypeInternal;
extern AddNumDefaultTypeInternal _AddNum_default_instance_;
class resultNum;
class resultNumDefaultTypeInternal;
extern resultNumDefaultTypeInternal _resultNum_default_instance_;
}  // namespace math
PROTOBUF_NAMESPACE_OPEN
template<> ::math::AddNum* Arena::CreateMaybeMessage<::math::AddNum>(Arena*);
template<> ::math::resultNum* Arena::CreateMaybeMessage<::math::resultNum>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace math {

// ===================================================================

class AddNum :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:math.AddNum) */ {
 public:
  AddNum();
  virtual ~AddNum();

  AddNum(const AddNum& from);
  AddNum(AddNum&& from) noexcept
    : AddNum() {
    *this = ::std::move(from);
  }

  inline AddNum& operator=(const AddNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddNum& operator=(AddNum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddNum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddNum* internal_default_instance() {
    return reinterpret_cast<const AddNum*>(
               &_AddNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddNum& a, AddNum& b) {
    a.Swap(&b);
  }
  inline void Swap(AddNum* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddNum* New() const final {
    return CreateMaybeMessage<AddNum>(nullptr);
  }

  AddNum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddNum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddNum& from);
  void MergeFrom(const AddNum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddNum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "math.AddNum";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mathemat_2eproto);
    return ::descriptor_table_mathemat_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumFirstFieldNumber = 1,
    kNumSencondFieldNumber = 2,
  };
  // int32 num_first = 1;
  void clear_num_first();
  ::PROTOBUF_NAMESPACE_ID::int32 num_first() const;
  void set_num_first(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_first() const;
  void _internal_set_num_first(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 num_sencond = 2;
  void clear_num_sencond();
  ::PROTOBUF_NAMESPACE_ID::int32 num_sencond() const;
  void set_num_sencond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_sencond() const;
  void _internal_set_num_sencond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:math.AddNum)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_first_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_sencond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mathemat_2eproto;
};
// -------------------------------------------------------------------

class resultNum :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:math.resultNum) */ {
 public:
  resultNum();
  virtual ~resultNum();

  resultNum(const resultNum& from);
  resultNum(resultNum&& from) noexcept
    : resultNum() {
    *this = ::std::move(from);
  }

  inline resultNum& operator=(const resultNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline resultNum& operator=(resultNum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const resultNum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const resultNum* internal_default_instance() {
    return reinterpret_cast<const resultNum*>(
               &_resultNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(resultNum& a, resultNum& b) {
    a.Swap(&b);
  }
  inline void Swap(resultNum* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline resultNum* New() const final {
    return CreateMaybeMessage<resultNum>(nullptr);
  }

  resultNum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<resultNum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const resultNum& from);
  void MergeFrom(const resultNum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(resultNum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "math.resultNum";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mathemat_2eproto);
    return ::descriptor_table_mathemat_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumResultFieldNumber = 1,
  };
  // int32 num_result = 1;
  void clear_num_result();
  ::PROTOBUF_NAMESPACE_ID::int32 num_result() const;
  void set_num_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_result() const;
  void _internal_set_num_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:math.resultNum)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mathemat_2eproto;
};
// ===================================================================

class addition_Stub;

class addition : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline addition() {};
 public:
  virtual ~addition();

  typedef addition_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void GetAdd(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::math::AddNum* request,
                       ::math::resultNum* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(addition);
};

class addition_Stub : public addition {
 public:
  addition_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  addition_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~addition_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements addition ------------------------------------------

  void GetAdd(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::math::AddNum* request,
                       ::math::resultNum* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(addition_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddNum

// int32 num_first = 1;
inline void AddNum::clear_num_first() {
  num_first_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddNum::_internal_num_first() const {
  return num_first_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddNum::num_first() const {
  // @@protoc_insertion_point(field_get:math.AddNum.num_first)
  return _internal_num_first();
}
inline void AddNum::_internal_set_num_first(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_first_ = value;
}
inline void AddNum::set_num_first(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_first(value);
  // @@protoc_insertion_point(field_set:math.AddNum.num_first)
}

// int32 num_sencond = 2;
inline void AddNum::clear_num_sencond() {
  num_sencond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddNum::_internal_num_sencond() const {
  return num_sencond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddNum::num_sencond() const {
  // @@protoc_insertion_point(field_get:math.AddNum.num_sencond)
  return _internal_num_sencond();
}
inline void AddNum::_internal_set_num_sencond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_sencond_ = value;
}
inline void AddNum::set_num_sencond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_sencond(value);
  // @@protoc_insertion_point(field_set:math.AddNum.num_sencond)
}

// -------------------------------------------------------------------

// resultNum

// int32 num_result = 1;
inline void resultNum::clear_num_result() {
  num_result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 resultNum::_internal_num_result() const {
  return num_result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 resultNum::num_result() const {
  // @@protoc_insertion_point(field_get:math.resultNum.num_result)
  return _internal_num_result();
}
inline void resultNum::_internal_set_num_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_result_ = value;
}
inline void resultNum::set_num_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_result(value);
  // @@protoc_insertion_point(field_set:math.resultNum.num_result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace math

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mathemat_2eproto
